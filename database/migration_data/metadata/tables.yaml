- table:
    schema: public
    name: Store
  object_relationships:
  - name: StorePic
    using:
      foreign_key_constraint_on: storePicId
  array_relationships:
  - name: StoreItems
    using:
      foreign_key_constraint_on:
        column: storeId
        table:
          schema: public
          name: StoreItem
  insert_permissions:
  - role: StoreAdmin
    permission:
      check: {}
      columns:
      - address
      - category
      - googlePlacesId
      - name
      backend_only: false
  select_permissions:
  - role: Shopper
    permission:
      columns:
      - address
      - category
      - googlePlacesId
      - id
      - name
      filter: {}
  - role: StoreAdmin
    permission:
      columns:
      - address
      - category
      - googlePlacesId
      - name
      - id
      filter: {}
  update_permissions:
  - role: StoreAdmin
    permission:
      columns:
      - address
      - category
      - googlePlacesId
      - name
      filter: {}
      check: null
  delete_permissions:
  - role: StoreAdmin
    permission:
      filter: {}
- table:
    schema: public
    name: StoreItem
  object_relationships:
  - name: Store
    using:
      foreign_key_constraint_on: storeId
  - name: StoreItemPic
    using:
      foreign_key_constraint_on: itemImageId
  insert_permissions:
  - role: StoreAdmin
    permission:
      check: {}
      columns:
      - barcodeId
      - description
      - itemImageId
      - longName
      - price
      - purchased
      - quantity
      - shortName
      - storeId
      backend_only: false
  select_permissions:
  - role: Shopper
    permission:
      columns:
      - barcodeId
      - quantity
      - price
      - shortName
      - longName
      - description
      - purchased
      - itemImageId
      - storeId
      filter: {}
  - role: StoreAdmin
    permission:
      columns:
      - purchased
      - price
      - barcodeId
      - description
      - longName
      - quantity
      - shortName
      - itemImageId
      - storeId
      filter: {}
  update_permissions:
  - role: Shopper
    permission:
      columns:
      - purchased
      filter: {}
      check: null
  - role: StoreAdmin
    permission:
      columns:
      - barcodeId
      - description
      - longName
      - price
      - purchased
      - quantity
      - shortName
      filter: {}
      check: null
  delete_permissions:
  - role: StoreAdmin
    permission:
      filter: {}
- table:
    schema: public
    name: StoreItemPic
  object_relationships:
  - name: StoreItem
    using:
      manual_configuration:
        remote_table:
          schema: public
          name: StoreItem
        column_mapping:
          id: itemImageId
  insert_permissions:
  - role: StoreAdmin
    permission:
      check: {}
      columns:
      - size128
      - size256
      - size64
      backend_only: false
  select_permissions:
  - role: Shopper
    permission:
      columns:
      - id
      - size128
      - size256
      - size64
      filter: {}
  - role: StoreAdmin
    permission:
      columns:
      - id
      - size128
      - size256
      - size64
      filter: {}
  update_permissions:
  - role: StoreAdmin
    permission:
      columns:
      - size128
      - size256
      - size64
      filter: {}
      check: null
  delete_permissions:
  - role: StoreAdmin
    permission:
      filter: {}
- table:
    schema: public
    name: StorePic
  object_relationships:
  - name: Store
    using:
      manual_configuration:
        remote_table:
          schema: public
          name: Store
        column_mapping:
          id: storePicId
  select_permissions:
  - role: Shopper
    permission:
      columns:
      - id
      - size64
      - size128
      - size256
      filter: {}
  - role: StoreAdmin
    permission:
      columns:
      - size128
      - size256
      - size64
      - id
      filter: {}
  update_permissions:
  - role: StoreAdmin
    permission:
      columns:
      - size128
      - size256
      - size64
      filter: {}
      check: null
- table:
    schema: public
    name: User
  object_relationships:
  - name: UserProfilePic
    using:
      foreign_key_constraint_on: profilePicId
  array_relationships:
  - name: UserCartItems
    using:
      foreign_key_constraint_on:
        column: userId
        table:
          schema: public
          name: UserCartItem
  - name: UserFavoriteItems
    using:
      foreign_key_constraint_on:
        column: userId
        table:
          schema: public
          name: UserFavoriteItem
  - name: UserFavoriteStores
    using:
      foreign_key_constraint_on:
        column: userId
        table:
          schema: public
          name: UserFavoriteStore
  select_permissions:
  - role: Shopper
    permission:
      columns:
      - email
      - firstName
      - lastName
      - password
      - profilePicId
      filter:
        id:
          _eq: X-Hasura-User-Id
  update_permissions:
  - role: Shopper
    permission:
      columns:
      - email
      - firstName
      - lastName
      - password
      filter:
        id:
          _eq: X-Hasura-User-Id
      check: null
  delete_permissions:
  - role: Shopper
    permission:
      filter:
        id:
          _eq: X-Hasura-User-Id
- table:
    schema: public
    name: UserCartItem
  object_relationships:
  - name: StoreItem
    using:
      foreign_key_constraint_on: itemBarcodeId
  - name: User
    using:
      foreign_key_constraint_on: userId
  insert_permissions:
  - role: Shopper
    permission:
      check:
        userId:
          _eq: X-Hasura-User-Id
      columns:
      - id
      - userId
      backend_only: false
  select_permissions:
  - role: Shopper
    permission:
      columns:
      - itemBarcodeId
      filter:
        userId:
          _eq: X-Hasura-User-Id
  delete_permissions:
  - role: Shopper
    permission:
      filter:
        userId:
          _eq: X-Hasura-User-Id
- table:
    schema: public
    name: UserFavoriteItem
  object_relationships:
  - name: Store
    using:
      foreign_key_constraint_on: itemStoreId
  - name: StoreItem
    using:
      foreign_key_constraint_on: itemBarcodeId
  - name: User
    using:
      foreign_key_constraint_on: userId
  insert_permissions:
  - role: Shopper
    permission:
      check:
        userId:
          _eq: X-Hasura-User-Id
      columns:
      - itemBarcodeId
      backend_only: false
  select_permissions:
  - role: Shopper
    permission:
      columns:
      - itemBarcodeId
      - itemStoreId
      filter:
        userId:
          _eq: X-Hasura-User-Id
  update_permissions:
  - role: Shopper
    permission:
      columns:
      - itemBarcodeId
      filter:
        userId:
          _eq: X-Hasura-User-Id
      check: null
  delete_permissions:
  - role: Shopper
    permission:
      filter:
        userId:
          _eq: X-Hasura-User-Id
- table:
    schema: public
    name: UserFavoriteStore
  object_relationships:
  - name: Store
    using:
      foreign_key_constraint_on: storeId
  - name: User
    using:
      foreign_key_constraint_on: userId
  insert_permissions:
  - role: Shopper
    permission:
      check:
        userId:
          _eq: X-Hasura-User-Id
      columns:
      - storeId
      backend_only: false
  select_permissions:
  - role: Shopper
    permission:
      columns:
      - storeId
      filter:
        userId:
          _eq: X-Hasura-User-Id
  delete_permissions:
  - role: Shopper
    permission:
      filter:
        userId:
          _eq: X-Hasura-User-Id
- table:
    schema: public
    name: UserProfilePic
  object_relationships:
  - name: User
    using:
      manual_configuration:
        remote_table:
          schema: public
          name: User
        column_mapping:
          id: profilePicId
  select_permissions:
  - role: Shopper
    permission:
      columns:
      - size128
      - size256
      - size64
      filter:
        User:
          id:
            _eq: X-Hasura-User-Id
  update_permissions:
  - role: Shopper
    permission:
      columns:
      - size128
      - size256
      - size64
      filter:
        User:
          id:
            _eq: X-Hasura-User-Id
      check: null
